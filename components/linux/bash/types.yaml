tosca_definitions_version: alien_dsl_2_0_0
#
# Copyright 2019 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

metadata:
  template_name: org.ystia.heappe.components.bash
  template_version: 1.0.0-SNAPSHOT
  template_author: ystia

description: "Components using HEAppE API called in bash scripts"

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - org.ystia.heappe.components.pub:1.0.0-SNAPSHOT

node_types:

  org.ystia.heappe.components.bash.HEAppEJob:
    derived_from: org.ystia.heappe.components.pub.HEAppEJob
    description: >
      HEAppE Job
    attributes:
      jobID: { get_operation_output: [SELF, Standard, create, JOB_ID] }
      sessionID: { get_operation_output: [SELF, tosca.interfaces.node.lifecycle.Runnable, submit, SESSION_ID] }
    interfaces:
      Standard:
        inputs:
          HEAPPE_URL: {get_property: [SELF, heappeURL]}
          HEAPPE_USER: {get_property: [SELF, user]}
          HEAPPE_PASSWORD: {get_property: [SELF, password]}
        create:
          inputs:
            JOB_SPECIFICATION: {get_property: [SELF, jobSpecification]}
          implementation: scripts/create_job.sh
        # Added a no-op start operation just to have Alien4Cloud change the
        # component state to started
        start:
          implementation: scripts/noop.sh
        delete:
          inputs:
            JOB_ID: {get_attribute: [SELF, jobID]}
          implementation: scripts/delete_job.sh
      tosca.interfaces.node.lifecycle.Runnable:
        inputs:
          HEAPPE_URL: {get_property: [SELF, heappeURL]}
          JOB_ID: {get_attribute: [SELF, job_id]}
        submit:
          inputs:
            HEAPPE_USER: {get_property: [SELF, user]}
            HEAPPE_PASSWORD: {get_property: [SELF, password]}
          implementation: scripts/submit_job.sh
        run:
          inputs:
            SESSION_ID: {get_attribute: [SELF, sessionID]}
          implementation: scripts/get_job_status.sh
        cancel:
          inputs:
            SESSION_ID: {get_attribute: [SELF, sessionID]}
          implementation: scripts/cancel_job.sh
